

.. index::
   pair: Django; Project


.. _django_project:

===================================
Create the Django project
===================================

.. contents::
   :depth: 3



Requirements
=============


.. toctree::
   :maxdepth: 3
   
   requirements/requirements
   
   
Create the Django application
==============================

.. seealso::

   - https://docs.djangoproject.com/en/dev/intro/tutorial01/



django-admin startproject project_dates
----------------------------------------

::

	   
	├── project_dates
	│   ├── manage.py
	│   └── project_dates
	│       ├── __init__.py
	│       ├── settings.py
	│       ├── urls.py
	│       └── wsgi.py
	   


The default project_dates/setting.py module
++++++++++++++++++++++++++++++++++++++++++++


.. code-block:: python
   :linenos:
   

	"""
	Django settings for project_dates project.

	Generated by 'django-admin startproject' using Django 1.10.3.

	For more information on this file, see
	https://docs.djangoproject.com/en/1.10/topics/settings/

	For the full list of settings and their values, see
	https://docs.djangoproject.com/en/1.10/ref/settings/
	"""

	import os

	# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
	BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


	# Quick-start development settings - unsuitable for production
	# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

	# SECURITY WARNING: keep the secret key used in production secret!
	SECRET_KEY = 'a52+djdul28vqoq)r=j$_vc0qr@pok+gv=)ar=*fpcp)_q+ybz'

	# SECURITY WARNING: don't run with debug turned on in production!
	DEBUG = True

	ALLOWED_HOSTS = []


	# Application definition

	INSTALLED_APPS = [
		'django.contrib.admin',
		'django.contrib.auth',
		'django.contrib.contenttypes',
		'django.contrib.sessions',
		'django.contrib.messages',
		'django.contrib.staticfiles',
	]

	MIDDLEWARE = [
		'django.middleware.security.SecurityMiddleware',
		'django.contrib.sessions.middleware.SessionMiddleware',
		'django.middleware.common.CommonMiddleware',
		'django.middleware.csrf.CsrfViewMiddleware',
		'django.contrib.auth.middleware.AuthenticationMiddleware',
		'django.contrib.messages.middleware.MessageMiddleware',
		'django.middleware.clickjacking.XFrameOptionsMiddleware',
	]

	ROOT_URLCONF = 'project_dates.urls'

	TEMPLATES = [
		{
			'BACKEND': 'django.template.backends.django.DjangoTemplates',
			'DIRS': [],
			'APP_DIRS': True,
			'OPTIONS': {
				'context_processors': [
					'django.template.context_processors.debug',
					'django.template.context_processors.request',
					'django.contrib.auth.context_processors.auth',
					'django.contrib.messages.context_processors.messages',
				],
			},
		},
	]

	WSGI_APPLICATION = 'project_dates.wsgi.application'


	# Database
	# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

	DATABASES = {
		'default': {
			'ENGINE': 'django.db.backends.sqlite3',
			'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
		}
	}


	# Password validation
	# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

	AUTH_PASSWORD_VALIDATORS = [
		{
			'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
		},
		{
			'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
		},
		{
			'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
		},
		{
			'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
		},
	]


	# Internationalization
	# https://docs.djangoproject.com/en/1.10/topics/i18n/

	LANGUAGE_CODE = 'en-us'

	TIME_ZONE = 'UTC'

	USE_I18N = True

	USE_L10N = True

	USE_TZ = True


	# Static files (CSS, JavaScript, Images)
	# https://docs.djangoproject.com/en/1.10/howto/static-files/

	STATIC_URL = '/static/'

	
	
Create the Django tables in the SQLite database 
================================================

python manage.py migrate
-------------------------

::

    (django_test_dates) django_test_dates/project_dates$ python manage.py migrate

::

	Operations to perform:
	  Apply all migrations: admin, auth, contenttypes, sessions
	Running migrations:
	  Applying contenttypes.0001_initial... OK
	  Applying auth.0001_initial... OK
	  Applying admin.0001_initial... OK
	  Applying admin.0002_logentry_remove_auto_add... OK
	  Applying contenttypes.0002_remove_content_type_name... OK
	  Applying auth.0002_alter_permission_name_max_length... OK
	  Applying auth.0003_alter_user_email_max_length... OK
	  Applying auth.0004_alter_user_username_opts... OK
	  Applying auth.0005_alter_user_last_login_null... OK
	  Applying auth.0006_require_contenttypes_0002... OK
	  Applying auth.0007_alter_validators_add_error_messages... OK
	  Applying auth.0008_alter_user_username_max_length... OK
	  Applying sessions.0001_initial... OK

ls -als
++++++++
	
::

    (django_test_dates) django_test_dates/project_dates$ ll
    
::
    
	total 68
	drwxrwxr-x 3 assr38 assr38  4096 nov.   5 17:58 ./
	drwxrwxr-x 5 assr38 assr38  4096 nov.   5 17:47 ../
	-rw-r--r-- 1 assr38 assr38 36864 nov.   5 17:58 db.sqlite3
	-rwxrwxr-x 1 assr38 assr38   811 nov.   5 17:47 manage.py*
	drwxrwxr-x 3 assr38 assr38  4096 nov.   5 17:58 project_dates/

	
Next step : create the first application
=========================================

.. seealso::

   - :ref:`appli_transactions` 
 		
		
		
